Search.setIndex({"titles": ["absolv", "factories", "alchemical", "OpenMMAlchemicalFactory", "lj_potential", "lorentz_berthelot", "soft_core_lj_potential", "coordinate", "PACKMOLCoordinateFactory", "models", "DeltaG", "EquilibriumProtocol", "MinimizationProtocol", "NonEquilibriumProtocol", "SimulationProtocol", "State", "SwitchingProtocol", "System", "TransferFreeEnergyResult", "TransferFreeEnergySchema", "float_validator", "runners", "equilibrium", "EquilibriumRunner", "nonequilibrium", "NonEquilibriumRunner", "simulations", "AlchemicalOpenMMSimulation", "AlchemicalOpenMMSimulation.current_state", "EquilibriumOpenMMSimulation", "EquilibriumOpenMMSimulation.current_state", "NonEquilibriumOpenMMSimulation", "NonEquilibriumOpenMMSimulation.current_state", "RepexAlchemicalOpenMMSimulation", "TYPE_CHECKING", "utilities", "openmm", "array_to_vectors", "build_context", "create_system_generator", "disable_long_range_corrections", "evaluate_energy", "extract_coordinates", "minimize", "set_alchemical_lambdas", "set_coordinates", "topology", "topology_to_atom_indices", "topology_to_components", "Equilibrium Calculations", "Non-Equilibrium Calculations", "ABsolute SOLVantion Free Energy Calculations", "Installation", "Reproducibility", "Theory", "Alchemical Transformations"], "terms": {"absolut": [0, 49, 50], "solvat": [0, 49, 50, 51, 54], "free": [0, 9, 10, 11, 13, 18, 19, 23, 25, 39, 49, 50, 53, 54], "energi": [0, 3, 9, 10, 11, 12, 13, 18, 19, 23, 25, 29, 33, 38, 39, 41, 43, 49, 50, 53, 54, 55], "calcul": [0, 9, 11, 13, 18, 19, 22, 23, 24, 25, 39, 53], "openff": [0, 8, 23, 25, 39, 46, 47, 48, 49, 50], "openmm": [0, 2, 3, 23, 25, 26, 27, 29, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 53, 55], "modul": [0, 1, 21, 35], "creat": [1, 2, 8, 23, 25, 39, 48, 49, 50, 52], "topologi": [1, 8, 23, 25, 39, 47, 48], "system": [1, 2, 3, 7, 8, 11, 12, 13, 14, 16, 18, 19, 23, 25, 27, 29, 31, 33, 38, 39, 40, 41, 49, 50, 53, 55], "coordin": [1, 8, 23, 25, 27, 29, 33, 38, 41, 42, 45, 52], "factori": [2, 3, 4, 5, 6, 7, 8, 55], "class": [2, 3, 7, 8, 9, 22, 23, 24, 25, 26, 27, 29, 31, 33, 34], "function": [2, 3, 9, 23, 25, 36, 38, 46, 54], "absolv": [3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 27, 29, 31, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55], "alchem": [3, 4, 5, 6, 11, 13, 16, 18, 19, 21, 22, 23, 24, 25, 31, 39, 44, 49, 50, 53, 54], "sourc": [3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 27, 29, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48], "A": [3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 29, 31, 33, 37, 39, 47, 48, 49, 54], "aid": 3, "transform": [3, 11, 18, 19, 23, 25, 49, 50, 53, 54], "exist": 3, "ones": 3, "whose": 3, "non": [3, 13, 16, 18, 19, 24, 25, 31, 39, 51, 53, 55], "bond": [3, 39, 53, 55], "interact": [3, 11, 13, 16, 18, 19, 23, 25, 50, 54, 55], "can": [3, 23, 39, 49, 50, 52, 54, 55], "disabl": [3, 11, 18, 19, 40], "us": [3, 8, 11, 13, 14, 16, 17, 18, 19, 23, 25, 27, 29, 31, 38, 39, 41, 49, 53, 54, 55], "global": 3, "context": [3, 38, 42, 43, 44, 45, 55], "paramet": [3, 8, 20, 23, 25, 27, 29, 31, 33, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 54], "current": [3, 28, 30, 32, 42, 54, 55], "onli": [3, 34, 54, 55], "have": [3, 13, 16, 18, 19, 23, 25, 49, 50, 52], "vdw": [3, 11, 18, 19, 50], "electrostat": [3, 11, 13, 16, 18, 19, 44, 50], "singl": [3, 55], "built": [3, 53, 55], "forc": [3, 23, 25, 39, 40, 49, 53, 55], "custom": [3, 23, 25, 52, 53], "1": [3, 11, 13, 14, 16, 18, 19, 23, 31, 38, 39, 49, 50, 53, 54, 55], "4": [3, 13, 18, 19, 31, 54, 55], "all": [3, 23, 27, 29, 40, 49, 50, 55], "abov": [3, 55], "san": [3, 55], "ani": [3, 11, 18, 19, 23, 25, 39, 53, 55], "ar": [3, 13, 16, 18, 19, 34, 53, 54, 55], "support": [3, 54, 55], "method": [3, 8, 23, 25, 27, 29, 31, 33, 39, 47, 48, 53], "__init__": [3, 8, 23, 25, 27, 29, 31, 33], "classmethod": [3, 8, 23, 25], "gener": [3, 8, 13, 18, 19, 23, 25, 39, 52, 54], "alchemical_indic": 3, "persistent_indic": 3, "custom_alchemical_potenti": [3, 23, 25], "none": [3, 8, 11, 13, 15, 17, 18, 19, 23, 25, 27, 29, 31, 33, 38, 39, 41, 44, 45, 49, 50], "wherebi": [3, 31], "number": [3, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 43, 48, 54], "molecul": [3, 8, 17, 47, 49, 50, 52, 54, 55], "from": [3, 13, 18, 19, 27, 29, 31, 33, 39, 42, 47, 49, 50, 51, 54, 55], "base": [3, 27], "chemic": [3, 13, 18, 19, 23, 25, 31, 49, 53, 54], "By": [3, 55], "default": [3, 11, 12, 13, 14, 16, 18, 19, 38, 55], "soft": [3, 55], "core": [3, 55], "version": [3, 53, 55], "lj": [3, 53, 55], "potenti": [3, 23, 25, 27, 38, 54], "b": [3, 17, 18, 19, 23, 25, 39, 54], "c": [3, 49, 52], "6": [3, 55], "alpha": 3, "0": [3, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 38, 39, 43, 49, 50, 54], "5": [3, 49, 50, 54], "scale": [3, 13, 18, 19, 31, 54, 55], "lambda_ster": [3, 11, 18, 19, 41, 44, 49, 55], "embed": 3, "an": [3, 11, 18, 19, 23, 25, 27, 29, 31, 39, 42, 43, 44, 45, 50, 53, 54, 55], "nonbondedforc": [3, 40, 55], "while": [3, 11, 18, 19, 49, 50, 53, 55], "express": [3, 23, 25, 55], "set": [3, 8, 9, 23, 25, 38, 39, 41, 44, 45, 47, 49, 50, 55], "customnonbondedforc": [3, 40, 55], "modifi": [3, 13, 16, 18, 19, 53, 54, 55], "form": [3, 8, 23, 48], "original_express": 3, "The": [3, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 25, 27, 29, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 47, 48, 51, 52, 53, 54, 55], "list": [3, 8, 11, 17, 23, 37, 45, 47, 48], "int": [3, 8, 11, 17, 23, 27, 29, 34, 39, 43, 47, 48], "atom": [3, 23, 25, 27, 29, 38, 47, 49], "indic": [3, 17, 18, 19, 47], "correspond": [3, 8, 48, 54, 55], "each": [3, 11, 13, 14, 16, 17, 18, 19, 23, 25, 27, 47, 50, 54], "should": [3, 11, 12, 13, 14, 17, 18, 19, 23, 25, 41], "must": [3, 8, 11, 12, 13, 18, 19, 43, 49, 50], "part": 3, "i": [3, 8, 11, 12, 13, 17, 18, 19, 23, 25, 27, 29, 31, 33, 34, 39, 40, 43, 48, 49, 50, 52, 54, 55], "str": [3, 4, 5, 6, 8, 17, 18, 20, 23, 25, 27, 29, 33, 48], "describ": [3, 11, 13, 17, 18, 19, 23, 25, 31, 49], "intermolecular": [3, 23, 25, 55], "see": [3, 23, 25, 54], "inform": [3, 54], "about": [3, 18, 54], "valu": [3, 8, 10, 11, 13, 16, 17, 18, 19, 23, 25, 27, 29, 38, 39, 41, 43, 44, 53, 54], "includ": [3, 18, 19, 29, 33, 53, 55], "return": [3, 4, 5, 6, 8, 11, 17, 20, 23, 31, 34, 37, 38, 39, 41, 42, 47, 48], "type": [3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 31, 38, 39, 41, 42, 47, 48, 49, 50, 51], "build": [7, 38], "coordint": 7, "except": 7, "box": [8, 27, 29, 38, 41, 42, 45], "packmol": 8, "compon": [8, 17, 18, 19, 48], "target_dens": 8, "quantiti": [8, 18, 20, 23, 25, 27, 29, 31, 33, 37, 38, 39, 41, 42, 43, 45], "95": [8, 49], "unit": [8, 10, 18, 20, 23, 25, 38, 39, 42, 43, 45, 49, 50], "gram": 8, "millilit": 8, "toler": [8, 11, 12, 13, 18, 19, 43], "2": [8, 11, 13, 14, 16, 18, 19, 23, 31, 38, 49, 50, 54, 55], "angstrom": 8, "packag": [8, 52, 53, 55], "tupl": [8, 17, 18, 31, 42, 48], "smiles_i": [8, 48], "count_i": [8, 48], "where": [8, 27, 29, 31, 33, 48, 51, 54, 55], "smile": [8, 17, 18, 19, 48], "represent": [8, 48], "instanc": [8, 17, 18, 19, 34, 48], "target": 8, "mass": [8, 39], "densiti": 8, "final": [8, 49, 50], "compat": 8, "g": [8, 11, 18, 19, 23, 49], "ml": 8, "If": [8, 11, 12, 13, 18, 19, 23, 25, 27, 29, 33, 43, 48, 52, 55], "box_siz": 8, "provid": [8, 53], "minimum": [8, 11, 12, 13, 16, 18, 19, 43], "space": 8, "between": [8, 13, 16, 17, 18, 19, 25, 49, 50, 53, 55], "dure": [8, 13, 18, 19, 55], "pack": 8, "rais": 8, "packmolruntimeerror": 8, "contain": [8, 17, 18, 19, 23, 25, 48, 52, 53, 55], "were": [8, 54], "wrap": [8, 20, 23, 25, 38, 42, 45], "numpi": [8, 23, 25, 37], "arrai": [8, 11, 18, 19, 23, 25, 37, 38, 42, 45], "shape": [8, 37, 38, 42, 45], "n_atom": [8, 38, 42, 45], "3": [8, 13, 16, 18, 19, 31, 37, 38, 42, 45, 54, 55], "toolkit": [8, 23, 25, 39, 47, 48, 49, 50, 52], "defin": [9, 15, 18, 19, 23, 25, 27, 29, 49, 50], "pydant": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "model": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 49, 50], "show": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 53], "json": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "schema": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 25, 49, 50], "titl": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "object": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 36, 37, 45, 46, 49, 50, 55], "properti": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 30, 32], "descript": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "kt": [10, 18], "std_error": [10, 18], "std": [10, 18], "error": [10, 18, 53], "standard": [10, 18, 49, 51, 53, 55], "requir": [10, 11, 13, 14, 15, 16, 17, 18, 19, 33, 52, 54], "field": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 25, 39, 49], "float": [10, 20, 31, 41, 44], "encod": [11, 12, 13, 14, 16, 18, 19, 38, 49, 50], "protocol": [11, 13, 16, 18, 19, 27, 29, 31, 33, 49, 50, 54], "perform": [11, 12, 13, 14, 18, 19, 23, 25, 29, 33, 40, 43, 49, 50], "equilibrium": [11, 13, 18, 19, 23, 24, 25, 27, 29, 31, 51, 53], "e": [11, 18, 19, 23, 25, 39, 49, 50, 55], "ti": [11, 18, 19, 54], "mbar": [11, 18, 19, 23, 54], "nalchem": [11, 18, 19], "enum": [11, 13, 18, 19], "string": [11, 13, 18, 19, 23, 25], "minimization_protocol": [11, 13, 18, 19], "minim": [11, 12, 13, 18, 19, 29, 33], "whether": [11, 18, 19, 39], "prior": [11, 13, 18, 19], "simul": [11, 13, 14, 18, 19, 21, 23, 25, 27, 28, 29, 30, 31, 32, 33, 34, 38, 41, 50, 53], "10": [11, 12, 13, 16, 18, 19, 43, 49], "max_iter": [11, 12, 13, 18, 19, 43], "allof": [11, 13, 18, 19], "ref": [11, 13, 18, 19], "definit": [11, 13, 18, 19], "minimizationprotocol": [11, 13, 18, 19], "equilibration_protocol": [11, 13, 18, 19], "equilibr": [11, 13, 18, 19, 29, 33], "option": [11, 13, 15, 18, 19, 23, 27, 29, 33, 38, 41, 44, 45, 49, 50], "run": [11, 13, 18, 19, 23, 25, 26, 27, 29, 31, 33, 49, 50, 53, 54], "product": [11, 13, 18, 19, 27], "one": [11, 17, 18, 19, 49, 50, 51, 54], "n_steps_per_iter": [11, 13, 14, 18, 19, 50], "10000": [11, 13, 18, 19], "n_iter": [11, 13, 14, 18, 19, 50], "timestep": [11, 13, 14, 16, 18, 19, 38, 50], "thermostat_frict": [11, 13, 14, 16, 18, 19, 38], "simulationprotocol": [11, 13, 18, 19, 50], "production_protocol": [11, 13, 18, 19, 50], "6250": [11, 13, 18, 19, 50], "160": [11, 13, 18, 19, 50], "lambda": [11, 13, 16, 18, 19, 23, 27, 29, 44, 54], "steric": [11, 13, 16, 18, 19, 44], "pathwai": [11, 18, 19, 31, 49, 50, 54], "along": [11, 18, 19, 31, 49, 50, 54], "repres": [11, 18, 19], "fulli": [11, 18, 19, 25, 54], "solut": [11, 17, 18, 19, 25, 49, 50, 51, 54, 55], "solvent": [11, 17, 18, 19, 23, 25, 39, 49, 50, 51, 54, 55], "item": [11, 18, 19], "maximum": [11, 12, 13, 18, 19, 43], "lambda_electrostat": [11, 18, 19, 41, 44, 49, 55], "sampler": [11, 18, 19, 49], "mode": [11, 18, 19], "which": [11, 18, 19, 27, 29, 52, 54, 55], "sampl": [11, 13, 18, 19, 31, 54], "differ": [11, 18, 19, 48, 53, 54], "state": [11, 13, 16, 18, 19, 23, 25, 27, 28, 29, 30, 31, 32, 33, 42, 49, 50, 54, 55], "repex": [11, 18, 19, 49], "independ": [11, 18, 19], "how": [11, 12, 13, 14, 17, 18, 19, 43, 54], "precis": [11, 12, 13, 18, 19, 43], "locat": [11, 12, 13, 18, 19, 43], "kj": [11, 12, 13, 18, 19], "mol": [11, 12, 13, 18, 19], "nm": [11, 12, 13, 18, 19], "exclusiveminimum": [11, 12, 13, 14, 15, 16, 17, 18, 19], "max": [11, 12, 13, 18, 19], "iter": [11, 12, 13, 14, 18, 19, 27, 43], "thi": [11, 12, 13, 17, 18, 19, 23, 25, 31, 33, 40, 43, 49, 50, 51, 53, 54, 55], "continu": [11, 12, 13, 18, 19, 43, 54], "until": [11, 12, 13, 18, 19, 43, 54], "result": [11, 12, 13, 18, 19, 43, 49, 50], "converg": [11, 12, 13, 18, 19, 43], "integ": [11, 12, 13, 14, 16, 17, 18, 19], "evolv": [11, 13, 14, 16, 18, 19], "molecular": [11, 13, 14, 18, 19, 53, 54], "n": [11, 13, 14, 16, 18, 19, 50, 54, 55], "step": [11, 13, 14, 16, 18, 19, 29, 33, 54], "per": [11, 13, 14, 16, 18, 19], "total": [11, 13, 14, 16, 17, 18, 19, 54], "equal": [11, 13, 14, 18, 19], "total_number_of_iter": [11, 13, 14, 18, 19], "steps_per_iter": [11, 13, 14, 18, 19], "time": [11, 13, 14, 16, 18, 19, 54, 55], "forward": [11, 13, 14, 18, 19, 25, 31, 54], "f": [11, 13, 14, 16, 18, 19, 54], "thermostat": [11, 13, 14, 16, 18, 19, 38], "friction": [11, 13, 14, 16, 18, 19, 38], "coeffici": [11, 13, 14, 16, 18, 19], "p": [11, 13, 14, 16, 18, 19, 50], "langevin": [11, 13, 14, 16, 18, 19], "constrainedfloatvalu": 11, "liter": [11, 13, 23, 25, 27, 29, 31, 33, 38, 39, 41], "valid": [11, 12, 14, 15, 16, 17, 20], "_validate_lambda_length": 11, "n_state": 11, "nonnegativeint": [12, 16], "positivefloat": [12, 14, 15, 16], "validate_unit": [12, 14, 15, 16], "constraint": [12, 14, 15, 16, 39], "switch": [13, 18, 19, 25, 31, 39, 50, 51, 54, 55], "like": [13, 49], "It": [13, 51], "expect": [13, 18, 19], "first": [13, 17, 18, 19, 50, 54], "annihil": [13, 16, 18, 19, 50, 54, 55], "follow": [13, 18, 19, 25, 49, 50, 54], "decoupl": [13, 16, 18, 19, 50, 54, 55], "refer": [13, 23, 25, 27, 29, 31, 33, 38, 41, 55], "ballard": [13, 18, 19, 31, 54], "andrew": [13, 18, 19, 31, 54], "j": [13, 18, 19, 31, 54], "christoph": [13, 18, 19, 31, 49, 54], "jarzynski": [13, 18, 19, 31, 54], "replica": [13, 18, 19, 31, 33, 53, 54], "exchang": [13, 18, 19, 31, 33, 54], "nonequilibrium": [13, 18, 19, 25, 31, 54], "enhanc": [13, 18, 19, 31, 54], "increas": [13, 18, 19, 31, 54], "overlap": [13, 18, 19, 31, 54], "journal": [13, 18, 19, 31, 49, 53, 54], "physic": [13, 18, 19, 31, 54], "136": [13, 18, 19, 31, 54], "19": [13, 18, 19, 31, 54], "2012": [13, 18, 19, 31, 54], "194101": [13, 18, 19, 31, 54], "gapsi": [13, 18, 19, 31], "vytauta": [13, 18, 19, 31], "et": [13, 18, 19, 31, 49, 53], "al": [13, 18, 19, 31, 49, 53], "larg": [13, 18, 19, 31], "rel": [13, 18, 19, 31], "protein": [13, 18, 19, 31], "ligand": [13, 18, 19, 31], "bind": [13, 18, 19, 31], "affin": [13, 18, 19, 31], "alchemi": [13, 18, 19, 31, 54], "scienc": [13, 18, 19, 31], "11": [13, 18, 19, 31, 49, 53], "2020": [13, 18, 19, 31], "1140": [13, 18, 19, 31], "1152": [13, 18, 19, 31], "nlike": [13, 18, 19], "nit": [13, 18, 19], "nfollow": [13, 18, 19], "nrefer": [13, 18, 19], "when": [13, 18, 19, 34, 39, 41, 51, 54], "both": [13, 18, 19, 31, 53, 54, 55], "end": [13, 18, 19, 25, 51, 54], "snapshot": [13, 18, 19, 50, 54], "switching_protocol": [13, 18, 19, 50], "driven": [13, 18, 19], "likewis": [13, 18, 19, 54], "order": [13, 18, 19], "comput": [13, 18, 19, 23, 25, 27, 49, 50, 51, 53, 54], "work": [13, 18, 19, 25, 54], "distribut": [13, 18, 19], "switchingprotocol": [13, 18, 19, 31, 50], "reversibli": [13, 16, 18, 19, 31], "drive": [13, 16, 18, 19, 54], "nto": [13, 16, 18, 19], "n_electrostatic_step": [13, 16, 18, 19, 50], "over": [13, 16, 18, 19, 50, 55], "need": [13, 16, 18, 19, 23, 25], "n_steps_per_electrostatic_step": [13, 16, 18, 19, 50], "give": [13, 16, 18, 19], "smooth": [13, 16, 18, 19], "transit": [13, 16, 18, 19], "discret": [13, 16, 18, 19, 54], "wherea": [13, 16, 18, 19], "greater": [13, 16, 18, 19], "than": [13, 16, 18, 19, 54], "yield": [13, 16, 18, 19, 50], "stepwis": [13, 16, 18, 19, 54], "shown": [13, 16, 18, 19, 53, 54], "figur": [13, 16, 18, 19, 31], "doi": [13, 16, 18, 19], "1063": [13, 16, 18, 19], "4712028": [13, 16, 18, 19], "n_steric_step": [13, 16, 18, 19, 50], "onc": [13, 16, 18, 19], "been": [13, 16, 18, 19, 23, 25, 27, 29, 31, 33, 53], "n_steps_per_steric_step": [13, 16, 18, 19, 50], "positiveint": [14, 17], "temperatur": [15, 18, 19, 38, 49, 50], "pressur": [15, 18, 19, 38, 49, 50], "thermodynam": [15, 18, 19, 54], "na": [15, 18, 19, 49], "k": [15, 18, 19, 49, 50], "atm": [15, 18, 19, 49, 50], "content": [17, 18, 19], "two": [17, 18, 19, 25, 34, 49, 50, 51, 54], "transfer": [17, 18, 19, 23, 25, 49, 50, 51, 54], "well": [17, 18, 19, 49, 50], "themselv": [17, 18, 19, 53], "nbe": [17, 18, 19], "dictionari": [17, 18, 19, 23], "pattern": [17, 18, 19], "mani": [17, 18, 19], "additionalproperti": [17, 18, 19], "solvent_a": [17, 18, 19, 49, 50], "vacuum": [17, 18, 19, 49, 50, 51, 54, 55], "solvent_b": [17, 18, 19, 49, 50], "second": [17, 18, 19], "dict": [17, 18, 23], "_validate_solut": 17, "_validate_solvent_a": 17, "_validate_solvent_b": 17, "n_solute_molecul": 17, "present": [17, 54], "n_solvent_molecules_a": 17, "n_solvent_molecules_b": 17, "to_compon": 17, "convert": [17, 37], "ident": [17, 18, 19], "amount": 17, "conta": 17, "same": [17, 48, 53], "store": [17, 23, 25, 27, 29, 33, 38, 42, 45, 55], "count": [17, 48], "input_schema": 18, "input": [18, 19, 23, 25], "wa": [18, 53], "transferfreeenergyschema": [18, 23, 25, 49, 50], "delta_g_solvent_a": 18, "delta": [18, 54], "chang": [18, 51, 54], "deltag": 18, "delta_g_solvent_b": 18, "proven": 18, "extra": 18, "equilibriumprotocol": [18, 19, 27, 29, 33, 49], "nonequilibriumprotocol": [18, 19, 50], "nof": [18, 19], "under": [18, 19], "investig": [18, 19], "phase": [18, 19], "alchemical_protocol_a": [18, 19, 49, 50], "anyof": [18, 19], "alchemical_protocol_b": [18, 19, 49, 50], "delta_g_from_a_to_b": 18, "delta_g_from_b_to_a": 18, "delta_g_from_a_to_b_with_unit": 18, "delta_g_from_b_to_a_with_unit": 18, "field_nam": 20, "expected_unit": 20, "map": 20, "right": [20, 54, 55], "euilibrium": 22, "runner": [22, 23, 24, 25, 49, 50], "util": [23, 25, 26, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48], "up": [23, 25, 39, 49, 50, 52], "analyz": [23, 25, 49, 50], "directori": [23, 25, 27, 29, 33], "experi": [23, 25], "output": [23, 25, 27, 29, 33], "assum": [23, 25], "setup": [23, 25, 49, 50], "alreadi": [23, 25, 27, 29, 31, 33], "successfulli": [23, 25], "file": [23, 25], "transferfreeenergyresult": 23, "platform": [23, 25, 27, 29, 31, 33, 38, 41, 49, 50], "cuda": [23, 25, 27, 29, 31, 33, 38, 41, 49, 50], "window": [23, 54], "opencl": [23, 25, 27, 29, 31, 33, 38, 41], "cpu": [23, 25, 27, 29, 31, 33, 38, 41], "specif": [23, 54], "state_index_0": 23, "specifi": [23, 25, 27, 29, 33, 49, 50], "force_field": [23, 25, 39, 49, 50], "prepar": [23, 25], "them": [23, 25, 55], "engin": [23, 25, 49, 50, 53], "smirnoff": [23, 25, 49, 50], "forcefield": [23, 25, 39, 49, 50], "callabl": [23, 25, 39], "without": [23, 25, 55], "modif": [23, 25], "take": [23, 25, 55], "argument": [23, 25, 34], "either": [23, 25], "openmmalchemicalfactori": [23, 25, 55], "more": [23, 25, 54], "detail": [23, 25], "crook": 25, "relat": 25, "de": 25, "coupl": [25, 54], "revers": [25, 31, 54], "box_vector": [27, 29, 33, 37, 38, 41, 45], "lambda_index": [27, 29], "extens": 27, "addition": 27, "reduc": [27, 54], "after": 27, "save": 27, "those": 27, "disk": 27, "attribut": [27, 29, 31], "initi": [27, 29], "period": [27, 29, 41, 55], "vector": [27, 29, 37, 38, 41, 42, 45], "accord": [27, 29, 49, 54, 55], "index": [27, 29], "full": [27, 29, 31, 33], "restart": [27, 29, 31, 33], "left": [27, 29, 31, 33, 54, 55], "off": [27, 29, 31, 33, 55], "previou": [27, 29, 31, 33], "attempt": [27, 29, 31, 33, 53], "had": [27, 29, 31, 33], "made": [27, 29, 31, 33, 53], "temporari": [27, 29, 33], "possibl": [27, 29, 33, 53, 55], "retriev": [28, 30, 32], "simplifi": [29, 31, 33], "process": [29, 31, 33], "checkpoint": [29, 33], "coordinates_0": 31, "box_vectors_0": 31, "coordinates_1": 31, "box_vectors_1": 31, "pull": 31, "direct": [31, 49], "hamiltonian": 33, "openmmtool": 33, "depend": [33, 52], "fals": [34, 40], "bool": [34, 39], "x": 34, "true": [34, 39], "otherwis": 34, "builtin": 34, "subclass": 34, "cannot": 34, "common": 35, "manipul": [36, 46], "ndarrai": 37, "vec3": [37, 45], "n_item": 37, "three": [37, 45, 53], "femtosecond": [38, 50], "picosecond": 38, "new": [38, 45, 49, 50, 55], "solvent_a_nonbonded_method": 39, "solvent_b_nonbonded_method": 39, "nonbonded_cutoff": 39, "nanomet": [39, 43], "rigid_wat": 39, "remove_cmm_mot": 39, "hydrogen_mass": 39, "switch_dist": 39, "parameter": [39, 52], "cutoff": 39, "appli": 39, "rigid": 39, "water": [39, 49, 50], "remov": 39, "cmm": 39, "motion": 39, "hydrogen": 39, "distanc": 39, "name": [39, 52, 54], "long": [40, 55], "rang": [40, 55], "correct": [40, 53, 55], "found": 40, "place": 40, "call": 40, "setusedispersioncorrect": 40, "setuselongrangecorrect": 40, "relev": 40, "evalu": [41, 54], "given": 41, "particular": [41, 49, 50], "extract": [42, 47], "respect": [42, 54, 55], "kilojoul": 43, "mole": 43, "updat": [44, 45], "helper": [47, 48], "associ": 47, "condens": 48, "down": 48, "contigu": 48, "mai": [48, 49], "multipl": [48, 49, 54], "To": [49, 50, 52], "begin": [49, 50, 52], "we": [49, 50, 52, 54], "intent": [49, 50], "purpos": [49, 50], "entireti": [49, 50], "In": [49, 50, 53], "thei": [49, 50, 55], "compactli": [49, 50], "done": [49, 50], "import": [49, 50], "There": 49, "case": [49, 51, 54], "ion": [49, 54], "pair": 49, "cl": 49, "here": [49, 50, 53, 54], "cco": [49, 50], "o": [49, 50], "895": [49, 50], "298": [49, 50], "15": [49, 50], "kelvin": [49, 50], "atmospher": [49, 50], "75": 49, "25": 49, "00": 49, "90": 49, "80": 49, "70": 49, "60": [49, 50], "50": [49, 50], "40": 49, "35": 49, "30": 49, "20": 49, "05": 49, "ethanol": [49, 50], "also": [49, 50, 52], "paper": 49, "moblei": [49, 53], "trivial": [49, 50], "offxml": [49, 50], "equilibriumrunn": 49, "print": [49, 50], "david": [49, 53], "l": [49, 53], "caitlin": 49, "bannan": 49, "andrea": 49, "rizzi": 49, "bayli": 49, "john": [49, 54], "d": [49, 54], "chodera": [49, 54], "victoria": 49, "t": [49, 55], "lim": 49, "nathan": 49, "m": 49, "kyle": 49, "beauchamp": 49, "r": [49, 54, 55], "slochow": 49, "michael": [49, 54], "shirt": [49, 54], "other": [49, 53, 55], "escap": 49, "percept": 49, "theori": [49, 53], "14": [49, 53], "6076": 49, "6092": 49, "2018": [49, 53], "100": 50, "12": [50, 54, 55], "next": 50, "38": 50, "190": 50, "collect": [50, 54], "configur": [50, 54], "everi": [50, 53], "coars": 50, "nonequilibriumrunn": 50, "framework": [51, 53, 54, 55], "aim": 51, "offer": [51, 54], "simpl": 51, "api": 51, "anoth": [51, 54, 55], "rout": [51, 54], "latter": 51, "main": [51, 53], "focu": 51, "recommend": [52, 54], "wai": [52, 54], "via": [52, 55], "manger": 52, "forg": 52, "you": 52, "access": 52, "openey": 52, "oechem": 52, "oequacpac": 52, "oeomega": 52, "speed": 52, "significantli": 52, "clone": 52, "repositori": [52, 53], "github": [52, 53], "git": 52, "http": 52, "com": 52, "simonboothroyd": 52, "cd": 52, "environ": 52, "activ": 52, "effort": 53, "ha": 53, "ensur": 53, "achiev": 53, "consist": [53, 54], "notori": 53, "tricki": 53, "remain": [53, 55], "least": 53, "self": [53, 54], "suit": 53, "test": 53, "These": 53, "origin": [53, 55], "exact": 53, "most": 53, "importantli": 53, "supprt": 53, "agreement": 53, "amongst": 53, "yank": 53, "gromac": 53, "report": 53, "loeffler": 53, "comparison": 53, "latest": 53, "below": [53, 54], "bar": [53, 54], "deviat": 53, "across": [53, 55], "hann": 53, "h": [53, 54], "stefano": 53, "bosisio": 53, "guilherm": 53, "duart": 53, "ramo": 53, "mato": 53, "donghyuk": 53, "suh": 53, "benoit": 53, "roux": 53, "julien": 53, "michel": 53, "softwar": 53, "5567": 53, "5582": 53, "g_": 54, "readili": 54, "construct": 54, "cycl": 54, "g_1": 54, "g_3": 54, "perhap": 54, "charg": [54, 55], "counter": 54, "so": [54, 55], "longer": 54, "surround": 54, "hydrat": 54, "special": 54, "being": 54, "commonli": 54, "For": 54, "inter": 54, "intramolecular": [54, 55], "page": 54, "within": [54, 55], "involv": 54, "divid": 54, "approach": 54, "integr": 54, "At": 54, "doe": 54, "deriv": 54, "technic": 54, "although": 54, "estim": 54, "exampl": 54, "proce": 54, "reverisbli": 54, "factor": 54, "practic": 54, "perspect": 54, "computation": 54, "effici": 54, "conveni": 54, "rather": 54, "fashion": 54, "make": 54, "perturb": 54, "sever": 54, "relax": 54, "repeat": 54, "sub": 54, "steb": 54, "complet": [54, 55], "w": 54, "sum_": 54, "u_": 54, "lambda_": [54, 55], "x_i": 54, "lambda_i": 54, "solv": [54, 55], "sum": 54, "n_": 54, "dfrac": [54, 55], "exp": 54, "beta": 54, "f_i": 54, "r_i": 54, "go": 54, "tp": 54, "straatsma": 54, "ja": 54, "mccammon": 54, "annual": 54, "review": 54, "chemistri": 54, "43": 54, "407": 54, "435": 54, "1992": 54, "charl": 54, "bennett": 54, "mont": 54, "carlo": 54, "data": 54, "22": 54, "245": 54, "268": 54, "1976": 54, "statist": 54, "optim": 54, "analysi": 54, "129": 54, "124105": 54, "2008": 54, "dellago": 54, "gerhard": 54, "hummer": 54, "dynam": 54, "entropi": 54, "16": 54, "41": 54, "61": 54, "2014": 54, "due": 55, "huge": 55, "flexibl": 55, "allow": 55, "implement": 55, "would": 55, "imposs": 55, "combin": 55, "As": 55, "custombondforc": 55, "linearli": 55, "partial": 55, "particl": 55, "elec": 55, "variabl": 55, "ad": 55, "q": 55, "sol": 55, "_i": 55, "some": 55, "literatur": 55, "becaus": 55, "directli": 55, "contribut": 55, "u": 55, "e_": 55, "un": 55, "OR": 55, "split": 55, "retain": 55, "move": 55, "won": 55, "boundari": 55, "proper": 55, "effect": 55, "copi": 55, "cut": 55, "etc": 55, "replac": 55, "normal": 55, "varepsilon": 55, "sigma": 55, "r_": 55, "eff": 55, "frac": 55, "further": 55, "_": 55}, "objects": {"": [[0, 0, 0, 1, "absolv", ""]], "absolv": [[1, 0, 0, 1, "factories", ""], [9, 0, 0, 1, "models", ""], [21, 0, 0, 1, "runners", ""], [26, 0, 0, 1, "simulations", ""], [35, 0, 0, 1, "utilities", ""]], "absolv.factories": [[2, 0, 0, 1, "alchemical", ""], [7, 0, 0, 1, "coordinate", ""]], "absolv.factories.alchemical": [[3, 1, 1, 0, "OpenMMAlchemicalFactory", "A factory that aids in transforming existing OpenMM systems into ones whose non-bonded interactions can be alchemically disabled using global context parameters."], [4, 4, 1, 0, "lj_potential", "str"], [5, 4, 1, 0, "lorentz_berthelot", "str"], [6, 4, 1, 0, "soft_core_lj_potential", "str"]], "absolv.factories.alchemical.OpenMMAlchemicalFactory": [[3, 2, 1, 0, "__init__", ""], [3, 2, 1, 0, "generate", "Generate a system whereby a number of the molecules can be alchemically transformed from a base chemical system."]], "absolv.factories.alchemical.OpenMMAlchemicalFactory.generate": [[3, 3, 2, 0, "alchemical_indices", "The atom indices corresponding to each molecule that should be alchemically transformable. The atom indices must correspond to  all atoms in each molecule as alchemically transforming part of a molecule is not supported."], [3, 3, 2, 0, "custom_alchemical_potential", "A custom expression to use for the potential energy function that describes the chemical-alchemical intermolecular interactions. See the Notes for information about the default value."], [3, 3, 2, 0, "persistent_indices", "The atom indices corresponding to each molecule that should not be alchemically transformable."], [3, 3, 2, 0, "system", "The chemical system to generate the alchemical system from"]], "absolv.factories.coordinate": [[8, 1, 1, 0, "PACKMOLCoordinateFactory", "A factory for generating boxes of molecule coordinates using PACKMOL."]], "absolv.factories.coordinate.PACKMOLCoordinateFactory": [[8, 2, 1, 0, "__init__", ""], [8, 2, 1, 0, "generate", "Generate a set of molecule coordinate by using the PACKMOL package."]], "absolv.factories.coordinate.PACKMOLCoordinateFactory.generate": [[8, 3, 2, 0, "components", "A list of the form components[i] = (smiles_i, count_i) where smiles_i is the SMILES representation of component i and count_i is the number of corresponding instances of that component to create."], [8, 3, 2, 0, "target_density", "Target mass density for final system with units compatible with g / mL. If None, box_size must be provided."], [8, 3, 2, 0, "tolerance", "The minimum spacing between molecules during packing in units compatible with angstroms."]], "absolv.models": [[10, 5, 1, 0, "DeltaG", "std_error (float)"], [11, 5, 1, 0, "EquilibriumProtocol", "A model that encodes the protocol for performing an equilibrium (e.g. TI, MBAR) alchemical free energy calculation."], [12, 5, 1, 0, "MinimizationProtocol", "A model that encodes how a system should be energy minimized."], [13, 5, 1, 0, "NonEquilibriumProtocol", "A model that encodes the protocol for performing a non-equilibrium switching like alchemical free energy calculation [1, 2]."], [14, 5, 1, 0, "SimulationProtocol", "A model that encodes how a system should be evolved by molecular simulation."], [15, 5, 1, 0, "State", "A model that defines the temperature and (optionally) the pressure of a thermodynamic state."], [16, 5, 1, 0, "SwitchingProtocol", "A model that encodes the protocol for non-reversibly driving a system between to alchemical states."], [17, 5, 1, 0, "System", "A model that describes the contents of the two solvents that the solutes will be transferred between (a -> b) as well as the solutes themselves."], [18, 5, 1, 0, "TransferFreeEnergyResult", "delta_g_solvent_a (absolv.models.DeltaG)"], [19, 5, 1, 0, "TransferFreeEnergySchema", "A schema that fully defines the inputs needed to compute the transfer free energy of a solvent between to solvents, or between a solvent and vacuum."], [20, 4, 1, 0, "float_validator", "A validator that maps unit wrapped quantities to floats in the right unit."]], "absolv.models.DeltaG": [[10, 6, 1, 0, "std_error", "The standard error of the value in units of kT"], [10, 6, 1, 0, "value", "The value of the free energy in units of kT"]], "absolv.models.EquilibriumProtocol": [[11, 6, 1, 0, "equilibration_protocol", "The (optional) protocol that describes the equilibration simulation to run prior to the production one."], [11, 6, 1, 0, "lambda_electrostatics", "The alchemical pathway to transform the electrostatic interactions along. A value of 1.0 represents a fully interacting system while a value of 0.0 represents a system with the solute-solute and solute-solvent electrostatic interactions disabled."], [11, 6, 1, 0, "lambda_sterics", "The alchemical pathway to transform the vdW interactions along. A value of 1.0 represents a fully interacting system while a value of 0.0 represents a system with the solute-solute and solute-solvent vdW interactions disabled."], [11, 6, 1, 0, "minimization_protocol", "Whether to minimize the energy of the system prior to any simulations."], [11, 7, 1, 0, "n_states", "Returns the number of lambda states that will be sampled at."], [11, 6, 1, 0, "production_protocol", "The protocol that describes the production to run."], [11, 6, 1, 0, "sampler", "The mode in which to sample each of the different lambda states."], [11, 6, 1, 0, "type", "_validate_lambda_lengths"]], "absolv.models.MinimizationProtocol": [[12, 6, 1, 0, "max_iterations", "The maximum number of iterations to perform. If this is 0, minimization is continued until the results converge."], [12, 6, 1, 0, "tolerance", "How precisely the energy minimum must be located [kj / mol / nm]"]], "absolv.models.NonEquilibriumProtocol": [[13, 6, 1, 0, "equilibration_protocol", "The (optional) protocol to follow when equilibrating the system in both the end states prior to running the production equilibrium simulations."], [13, 6, 1, 0, "minimization_protocol", "The (optional) protocol to follow when minimizing the system in both the end states prior to running the equilibrium simulations."], [13, 6, 1, 0, "production_protocol", "The protocol to follow when running the production equilibrium simulation in both the end states. The snapshots generated at the end of each iteration will be used for each non-equilibrium switch."], [13, 6, 1, 0, "switching_protocol", "The protocol that describes how each snapshot generated during the production simulation should be driven from state 0 -> 1 and likewise 1 -> 0 in order to compute the non-equilibrium work distributions."], [13, 6, 1, 0, "type", ""]], "absolv.models.SimulationProtocol": [[14, 6, 1, 0, "n_iterations", "The number of times to evolve the system forward by n_steps_per_iteration time steps."], [14, 6, 1, 0, "n_steps_per_iteration", "The number of steps to evolve the system by at each iteration. The total number of steps performed will be equal to the total_number_of_iterations * steps_per_iteration."], [14, 6, 1, 0, "thermostat_friction", "The friction coefficient [1/ps] to use for the Langevin thermostat."], [14, 6, 1, 0, "timestep", "The timestep [fs] to evolve the system by at each step."]], "absolv.models.State": [[15, 6, 1, 0, "pressure", "The pressure [atm]."], [15, 6, 1, 0, "temperature", "The temperature [K]."]], "absolv.models.SwitchingProtocol": [[16, 6, 1, 0, "n_electrostatic_steps", "The number of steps to annihilate the electrostatics interactions over. The total time needed to annihilate the electrostatics interactions will be n_electrostatic_steps * n_steps_per_electrostatic_step * timestep"], [16, 6, 1, 0, "n_steps_per_electrostatic_step", "The number of timesteps to evolve the system by each time the electrostatics interactions are modified. A value of 1 will give a 'smooth' transition between the each discrete lambda value whereas a value greater than 1 will yield a stepwise transition as shown in Figure 3 of doi:10.1063/1.4712028."], [16, 6, 1, 0, "n_steps_per_steric_step", "The number of timesteps to evolve the system by each time the sterics interactions are modified. A value of 1 will give a 'smooth' transition between the each discrete lambda value whereas a value greater than 1 will yield a stepwise transition as shown in Figure 3 of doi:10.1063/1.4712028."], [16, 6, 1, 0, "n_steric_steps", "The number of steps to decouple the sterics interactions over once the electrostatics interactions have been annihilated. The total time needed to annihilate the sterics interactions will be n_steric_steps * n_steps_per_steric_step * timestep"], [16, 6, 1, 0, "thermostat_friction", "The friction coefficient [1/ps] to use for the Langevin thermostat."], [16, 6, 1, 0, "timestep", "The timestep [fs] to evolve the system by at each step."]], "absolv.models.System": [[17, 7, 1, 0, "n_solute_molecules", "Returns the total number of solute molecules that will be present."], [17, 7, 1, 0, "n_solvent_molecules_a", "Returns the total number of solvent molecules that will be present in the first solution."], [17, 7, 1, 0, "n_solvent_molecules_b", "Returns the total number of solvent molecules that will be present in the second solution."], [17, 6, 1, 0, "solutes", "A dictionary containing the SMILES patterns of each solute in the system as well as how many instances of each there should be."], [17, 6, 1, 0, "solvent_a", "A dictionary containing the SMILES patterns of each component in the first solvent as well as how many instances of each there should be.A value of None should be used to indicate vacuum."], [17, 6, 1, 0, "solvent_b", "A dictionary containing the SMILES patterns of each component in the second solvent as well as how many instances of each there should be. A value of None should be used to indicate vacuum."], [17, 2, 1, 0, "to_components", "Converts this object into two lists: one containing the identities and amounts of the molecules present in the first solution, and one the containg the same for the second solution."]], "absolv.models.TransferFreeEnergyResult": [[18, 7, 1, 0, "delta_g_from_a_to_b", "The change in free energy of transferring the solute from solvent-a to solvent-b in units of kT."], [18, 7, 1, 0, "delta_g_from_a_to_b_with_units", "The change in free energy of transferring the solute from solvent-a to solvent-b, as well as the error in that change."], [18, 7, 1, 0, "delta_g_from_b_to_a", "The change in free energy of transferring the solute from solvent-b to solvent-a in units of kT."], [18, 7, 1, 0, "delta_g_from_b_to_a_with_units", "The change in free energy of transferring the solute from solvent-a to solvent-b, as well as the error in that change."], [18, 6, 1, 0, "delta_g_solvent_a", "The change in free energy of alchemically transforming the solute from an interacting to a non-interacting state in solvent-a."], [18, 6, 1, 0, "delta_g_solvent_b", "The change in free energy of alchemically transforming the solute from an interacting to a non-interacting state in solvent-b."], [18, 6, 1, 0, "input_schema", "The schema that was used to generate this result."], [18, 6, 1, 0, "provenance", "Extra provenance about how this result was generated."]], "absolv.models.TransferFreeEnergySchema": [[19, 6, 1, 0, "alchemical_protocol_a", "The protocol that describes the alchemical pathway to transform the solute along in the first solvent."], [19, 6, 1, 0, "alchemical_protocol_b", "The protocol that describes the alchemical pathway to transform the solute along in the second solvent."], [19, 6, 1, 0, "state", "The thermodynamic state to perform the calculation at."], [19, 6, 1, 0, "system", "A description of the system under investigation, including the identity of the solute and the two solvent phases."]], "absolv.models.float_validator": [[20, 3, 2, 0, "expected_units", ""], [20, 3, 2, 0, "field_name", ""]], "absolv.runners": [[22, 0, 0, 1, "equilibrium", ""], [24, 0, 0, 1, "nonequilibrium", ""]], "absolv.runners.equilibrium": [[23, 1, 1, 0, "EquilibriumRunner", "A utility class for setting up, running, and analyzing equilibrium free energy calculations."]], "absolv.runners.equilibrium.EquilibriumRunner": [[23, 2, 1, 0, "__init__", ""], [23, 2, 1, 0, "analyze", "Analyze the outputs of the simulations to compute the transfer free energy using MBAR."], [23, 2, 1, 0, "run", "Perform a simulation at each lambda window and for each solvent."], [23, 2, 1, 0, "setup", "Prepare the input files needed to compute the free energy and store them in the specified directory."]], "absolv.runners.equilibrium.EquilibriumRunner.analyze": [[23, 3, 2, 0, "directory", "The directory containing the input and simulation files."]], "absolv.runners.equilibrium.EquilibriumRunner.run": [[23, 3, 2, 0, "directory", "The directory containing the input files."], [23, 3, 2, 0, "platform", "The OpenMM platform to run using."], [23, 3, 2, 0, "states", "An optional dictionary of the specific solvent and states to run. The dictionary should have the form {\"solvent-a\": [state_index_0, ..], \"solvent-b\": [state_index_0, ..]}. All lambda windows for a solvent can be run by specifying None, e.g. {\"solvent-a\": None, \"solvent-b\": [0, 1, 2]}"]], "absolv.runners.equilibrium.EquilibriumRunner.setup": [[23, 3, 2, 0, "custom_alchemical_potential", "A custom expression to use for the potential energy function that describes the chemical-alchemical intermolecular interactions."], [23, 3, 2, 0, "directory", "The directory to create the input files in."], [23, 3, 2, 0, "force_field", "The force field, or a callable that transforms an OpenFF topology into an OpenMM system, without any alchemical modifications to run the calculations using."], [23, 3, 2, 0, "schema", "The schema defining the calculation to perform."]], "absolv.runners.nonequilibrium": [[25, 1, 1, 0, "NonEquilibriumRunner", "A utility class for setting up, running, and analyzing non-equilibrium free energy calculations."]], "absolv.runners.nonequilibrium.NonEquilibriumRunner": [[25, 2, 1, 0, "__init__", ""], [25, 2, 1, 0, "analyze", "Analyze the outputs of the non-equilibrium simulations to compute the transfer free energy using the Crooks relation."], [25, 2, 1, 0, "run", "Performs an equilibrium simulation at the two end states (i.e. fully interaction and fully de-coupled solute) for each solvent followed by non-equilibrium switching simulations between each end states to compute the forward and reverse work values."], [25, 2, 1, 0, "setup", "Prepare the input files needed to compute the free energy and store them in the specified directory."]], "absolv.runners.nonequilibrium.NonEquilibriumRunner.analyze": [[25, 3, 2, 0, "directory", "The directory containing the input and simulation files."]], "absolv.runners.nonequilibrium.NonEquilibriumRunner.run": [[25, 3, 2, 0, "directory", "The directory containing the input files."], [25, 3, 2, 0, "platform", "The OpenMM platform to run using."]], "absolv.runners.nonequilibrium.NonEquilibriumRunner.setup": [[25, 3, 2, 0, "custom_alchemical_potential", "A custom expression to use for the potential energy function that describes the chemical-alchemical intermolecular interactions."], [25, 3, 2, 0, "directory", "The directory to create the input files in."], [25, 3, 2, 0, "force_field", "The force field, or a callable that transforms an OpenFF topology into an OpenMM system, without any alchemical modifications to run the calculations using."], [25, 3, 2, 0, "schema", "The schema defining the calculation to perform."]], "absolv.simulations": [[27, 1, 1, 0, "AlchemicalOpenMMSimulation", "An extension to the base equilibrium simulation class that will additionally compute the reduced potentials at each lambda value after each production simulation iteration and save those values to disk."], [29, 1, 1, 0, "EquilibriumOpenMMSimulation", "A class that simplifies the process of running an equilibrium simulation with OpenMM, including performing energy minimizations, equilibration steps, and checkpointing."], [31, 1, 1, 0, "NonEquilibriumOpenMMSimulation", "A class that simplifies the process of running a non-equilibrium simulation with OpenMM, whereby a system is non-reversibly pulled along an alchemical pathway as described by Ballard and Jarzynski [1] (Figure 3) and Gapsys et al [2]."], [33, 1, 1, 0, "RepexAlchemicalOpenMMSimulation", "A class that simplifies the process of running a hamiltonian replica exchange simulation with OpenMM, including performing energy minimizations, equilibration steps, and checkpointing."], [34, 8, 1, 0, "TYPE_CHECKING", "bool(x) -> bool"]], "absolv.simulations.AlchemicalOpenMMSimulation": [[27, 2, 1, 0, "__init__", "The OpenMM system to simulate."], [28, 7, 1, 0, "current_state", "Retrieve the current state of the simulation."], [27, 2, 1, 0, "run", "Run the full simulation, restarting from where it left off if a previous attempt to run had already been made."]], "absolv.simulations.AlchemicalOpenMMSimulation.__init__": [[27, 3, 2, 0, "box_vectors", "The (optional) initial periodic box vectors."], [27, 3, 2, 0, "coordinates", "The initial coordinates of all atoms."], [27, 3, 2, 0, "lambda_index", "The index defining which value of lambda to simulate at."], [27, 3, 2, 0, "platform", "The OpenMM platform to simulate using."], [27, 3, 2, 0, "protocol", "The protocol to simulate according to."], [27, 3, 2, 0, "state", "The state to simulate at."], [27, 3, 2, 0, "system", "The OpenMM system to simulate."]], "absolv.simulations.AlchemicalOpenMMSimulation.run": [[27, 3, 2, 0, "directory", "The (optional) directory to run in. If no directory is specified the outputs will be stored in a temporary directory and no restarts will be possible."]], "absolv.simulations.EquilibriumOpenMMSimulation": [[29, 2, 1, 0, "__init__", "The OpenMM system to simulate."], [30, 7, 1, 0, "current_state", "Retrieve the current state of the simulation."], [29, 2, 1, 0, "run", "Run the full simulation, restarting from where it left off if a previous attempt to run had already been made."]], "absolv.simulations.EquilibriumOpenMMSimulation.__init__": [[29, 3, 2, 0, "box_vectors", "The (optional) initial periodic box vectors."], [29, 3, 2, 0, "coordinates", "The initial coordinates of all atoms."], [29, 3, 2, 0, "lambda_index", "The index defining which value of lambda to simulate at."], [29, 3, 2, 0, "platform", "The OpenMM platform to simulate using."], [29, 3, 2, 0, "protocol", "The protocol to simulate according to."], [29, 3, 2, 0, "state", "The state to simulate at."], [29, 3, 2, 0, "system", "The OpenMM system to simulate."]], "absolv.simulations.EquilibriumOpenMMSimulation.run": [[29, 3, 2, 0, "directory", "The (optional) directory to run in. If no directory is specified the outputs will be stored in a temporary directory and no restarts will be possible."]], "absolv.simulations.NonEquilibriumOpenMMSimulation": [[31, 2, 1, 0, "__init__", "The OpenMM system to simulate."], [32, 7, 1, 0, "current_state", "Retrieve the current state of the simulation."], [31, 2, 1, 0, "run", "Run the full simulation, restarting from where it left off if a previous attempt to run had already been made."]], "absolv.simulations.NonEquilibriumOpenMMSimulation.__init__": [[31, 3, 2, 0, "box_vectors_0", ""], [31, 3, 2, 0, "box_vectors_1", ""], [31, 3, 2, 0, "coordinates_0", ""], [31, 3, 2, 0, "coordinates_1", ""], [31, 3, 2, 0, "platform", "The OpenMM platform to simulate using."], [31, 3, 2, 0, "protocol", ""], [31, 3, 2, 0, "state", "The state to simulate at."], [31, 3, 2, 0, "system", "The OpenMM system to simulate."]], "absolv.simulations.RepexAlchemicalOpenMMSimulation": [[33, 2, 1, 0, "__init__", ""], [33, 2, 1, 0, "run", "Run the full simulation, restarting from where it left off if a previous attempt to run had already been made."]], "absolv.simulations.RepexAlchemicalOpenMMSimulation.__init__": [[33, 3, 2, 0, "box_vectors", ""], [33, 3, 2, 0, "coordinates", ""], [33, 3, 2, 0, "platform", ""], [33, 3, 2, 0, "protocol", ""], [33, 3, 2, 0, "state", ""], [33, 3, 2, 0, "system", ""]], "absolv.simulations.RepexAlchemicalOpenMMSimulation.run": [[33, 3, 2, 0, "directory", "The (optional) directory to run in. If no directory is specified the outputs will be stored in a temporary directory and no restarts will be possible."]], "absolv.utilities": [[36, 0, 0, 1, "openmm", ""], [46, 0, 0, 1, "topology", ""]], "absolv.utilities.openmm": [[37, 4, 1, 0, "array_to_vectors", "A utility to convert numpy arrays into lists of OpenMM vectors."], [38, 4, 1, 0, "build_context", "Builds a new OpenMM context."], [39, 4, 1, 0, "create_system_generator", "Creates a 'system generator' that can be used when setting up an alchemical free energy calculation from an OpenMM force field."], [40, 4, 1, 0, "disable_long_range_corrections", "Disables all long range corrections found in a system in-place."], [41, 4, 1, 0, "evaluate_energy", "Evaluates the energy of a given system at a particular set of coordinates."], [42, 4, 1, 0, "extract_coordinates", "Extracts the current coordinates and box vectors from an OpenMM context."], [43, 4, 1, 0, "minimize", "Energy minimize an OpenMM context."], [44, 4, 1, 0, "set_alchemical_lambdas", "Set the values of the alchemical lambdas on an OpenMM context."], [45, 4, 1, 0, "set_coordinates", "Updates an OpenMM context with a new set of coordinates and box vectors."]], "absolv.utilities.openmm.build_context": [[38, 3, 2, 0, "box_vectors", "The (optional) box vectors stored in a unit wrapped array with shape=(3, 3)."], [38, 3, 2, 0, "coordinates", "The atom coordinates stored in a unit wrapped array with shape=(n_atoms, 3)."], [38, 3, 2, 0, "pressure", "The (optional) pressure to simulate at."], [38, 3, 2, 0, "system", "The system encoding the potential energy function."], [38, 3, 2, 0, "temperature", "The temperature to simulate at."]], "absolv.utilities.openmm.create_system_generator": [[39, 3, 2, 0, "constraints", "The type of constraints to apply to the system."], [39, 3, 2, 0, "force_field", "The OpenMM force field to parameterize the topology using."], [39, 3, 2, 0, "hydrogen_mass", "The mass to use for hydrogens."], [39, 3, 2, 0, "nonbonded_cutoff", "The non-bonded cutoff to use."], [39, 3, 2, 0, "remove_cmm_motion", "Whether to remove any CMM motion."], [39, 3, 2, 0, "rigid_water", "Whether to force rigid water."], [39, 3, 2, 0, "solvent_a_nonbonded_method", "The non-bonded method to use in solvent a."], [39, 3, 2, 0, "solvent_b_nonbonded_method", "The non-bonded method to use in solvent b."], [39, 3, 2, 0, "switch_distance", "The switch distance to use."]], "absolv.utilities.openmm.disable_long_range_corrections": [[40, 3, 2, 0, "system", ""]], "absolv.utilities.openmm.evaluate_energy": [[41, 3, 2, 0, "box_vectors", "The (optional) periodic box vectors that should be used when evaluating the energies."], [41, 3, 2, 0, "coordinates", "The coordinates that should be used when evaluating the energies."], [41, 3, 2, 0, "lambda_electrostatics", "The value of lambda_electrostatics to evaluate the energies at."], [41, 3, 2, 0, "lambda_sterics", "The value of lambda_sterics to evaluate the energies at."], [41, 3, 2, 0, "platform", "The OpenMM platform to simulate using."], [41, 3, 2, 0, "system", "The openmm system that should be used to evaluate the energies."]], "absolv.utilities.openmm.extract_coordinates": [[42, 3, 2, 0, "state", "The state (or context) to extract from."]], "absolv.utilities.openmm.minimize": [[43, 3, 2, 0, "context", "The context to minimize."], [43, 3, 2, 0, "max_iterations", "The maximum number of iterations to perform. If this is 0, minimization is continued until the results converge."], [43, 3, 2, 0, "tolerance", "How precisely the energy minimum must be located"]], "absolv.utilities.openmm.set_alchemical_lambdas": [[44, 3, 2, 0, "context", "The context to update."], [44, 3, 2, 0, "lambda_electrostatics", "The (optional) value of the electrostatics lambda."], [44, 3, 2, 0, "lambda_sterics", "The (optional) value of the steric lambda."]], "absolv.utilities.openmm.set_coordinates": [[45, 3, 2, 0, "box_vectors", "The (optional) box vectors stored in a unit wrapped array with shape=(3, 3) or list of three Vec3 objects."], [45, 3, 2, 0, "context", "The context to update."], [45, 3, 2, 0, "coordinates", "The new coordinates stored in a unit wrapped array with shape=(n_atoms, 3)."]], "absolv.utilities.topology": [[47, 4, 1, 0, "topology_to_atom_indices", "A helper method for extracting the sets of atom indices associated with each molecule in a topology."], [48, 4, 1, 0, "topology_to_components", "A helper method for condensing a topology down to a list of components and their counts."]], "absolv.utilities.topology.topology_to_atom_indices": [[47, 3, 2, 0, "topology", "The topology to extract the atom indices from."]], "absolv.utilities.topology.topology_to_components": [[48, 3, 2, 0, "topology", "The topology to condense."]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:parameter", "4": "py:function", "5": "py:pydantic_model", "6": "py:pydantic_field", "7": "py:property", "8": "py:data"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "parameter", "Python parameter"], "4": ["py", "function", "Python function"], "5": ["py", "pydantic_model", "Python model"], "6": ["py", "pydantic_field", "Python field"], "7": ["py", "property", "Python property"], "8": ["py", "data", "Python data"]}, "titleterms": {"absolv": 0, "factori": 1, "alchem": [2, 55], "openmmalchemicalfactori": 3, "note": [3, 23, 25, 33, 48, 54, 55], "lj_potenti": 4, "lorentz_berthelot": 5, "soft_core_lj_potenti": 6, "coordin": 7, "packmolcoordinatefactori": 8, "model": 9, "deltag": 10, "equilibriumprotocol": 11, "minimizationprotocol": 12, "nonequilibriumprotocol": 13, "simulationprotocol": 14, "state": 15, "switchingprotocol": 16, "system": 17, "transferfreeenergyresult": 18, "transferfreeenergyschema": 19, "float_valid": 20, "runner": 21, "equilibrium": [22, 49, 50, 54], "equilibriumrunn": 23, "nonequilibrium": 24, "nonequilibriumrunn": 25, "simul": 26, "alchemicalopenmmsimul": [27, 28], "current_st": [28, 30, 32], "equilibriumopenmmsimul": [29, 30], "nonequilibriumopenmmsimul": [31, 32], "repexalchemicalopenmmsimul": 33, "type_check": 34, "util": 35, "openmm": 36, "array_to_vector": 37, "build_context": 38, "create_system_gener": 39, "disable_long_range_correct": 40, "evaluate_energi": 41, "extract_coordin": 42, "minim": 43, "set_alchemical_lambda": 44, "set_coordin": 45, "topologi": 46, "topology_to_atom_indic": 47, "topology_to_compon": 48, "calcul": [49, 50, 51, 54], "refer": [49, 50, 53, 54], "non": [50, 54], "absolut": 51, "solvant": 51, "free": 51, "energi": 51, "instal": 52, "us": 52, "conda": 52, "from": 52, "sourc": 52, "reproduc": 53, "regress": 53, "result": 53, "theori": 54, "transform": 55, "electrostat": 55, "vdw": 55, "lennard": 55, "jone": 55, "custom": 55, "form": 55}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "nbsphinx": 4, "sphinxcontrib.bibtex": 9, "sphinx": 57}, "alltitles": {"absolv": [[0, "module-absolv"]], "factories": [[1, "module-absolv.factories"]], "alchemical": [[2, "module-absolv.factories.alchemical"]], "OpenMMAlchemicalFactory": [[3, "openmmalchemicalfactory"]], "Notes": [[3, null], [3, null], [23, null], [23, null], [25, null], [25, null], [33, null], [48, null]], "lj_potential": [[4, "lj-potential"]], "lorentz_berthelot": [[5, "lorentz-berthelot"]], "soft_core_lj_potential": [[6, "soft-core-lj-potential"]], "coordinate": [[7, "module-absolv.factories.coordinate"]], "PACKMOLCoordinateFactory": [[8, "packmolcoordinatefactory"]], "models": [[9, "module-absolv.models"]], "DeltaG": [[10, "deltag"]], "EquilibriumProtocol": [[11, "equilibriumprotocol"]], "MinimizationProtocol": [[12, "minimizationprotocol"]], "NonEquilibriumProtocol": [[13, "nonequilibriumprotocol"]], "SimulationProtocol": [[14, "simulationprotocol"]], "State": [[15, "state"]], "SwitchingProtocol": [[16, "switchingprotocol"]], "System": [[17, "system"]], "TransferFreeEnergyResult": [[18, "transferfreeenergyresult"]], "TransferFreeEnergySchema": [[19, "transferfreeenergyschema"]], "float_validator": [[20, "float-validator"]], "runners": [[21, "module-absolv.runners"]], "equilibrium": [[22, "module-absolv.runners.equilibrium"]], "EquilibriumRunner": [[23, "equilibriumrunner"]], "nonequilibrium": [[24, "module-absolv.runners.nonequilibrium"]], "NonEquilibriumRunner": [[25, "nonequilibriumrunner"]], "simulations": [[26, "module-absolv.simulations"]], "AlchemicalOpenMMSimulation": [[27, "alchemicalopenmmsimulation"]], "AlchemicalOpenMMSimulation.current_state": [[28, "alchemicalopenmmsimulation-current-state"]], "EquilibriumOpenMMSimulation": [[29, "equilibriumopenmmsimulation"]], "EquilibriumOpenMMSimulation.current_state": [[30, "equilibriumopenmmsimulation-current-state"]], "NonEquilibriumOpenMMSimulation": [[31, "nonequilibriumopenmmsimulation"]], "NonEquilibriumOpenMMSimulation.current_state": [[32, "nonequilibriumopenmmsimulation-current-state"]], "RepexAlchemicalOpenMMSimulation": [[33, "repexalchemicalopenmmsimulation"]], "TYPE_CHECKING": [[34, "type-checking"]], "utilities": [[35, "module-absolv.utilities"]], "openmm": [[36, "module-absolv.utilities.openmm"]], "array_to_vectors": [[37, "array-to-vectors"]], "build_context": [[38, "build-context"]], "create_system_generator": [[39, "create-system-generator"]], "disable_long_range_corrections": [[40, "disable-long-range-corrections"]], "evaluate_energy": [[41, "evaluate-energy"]], "extract_coordinates": [[42, "extract-coordinates"]], "minimize": [[43, "minimize"]], "set_alchemical_lambdas": [[44, "set-alchemical-lambdas"]], "set_coordinates": [[45, "set-coordinates"]], "topology": [[46, "module-absolv.utilities.topology"]], "topology_to_atom_indices": [[47, "topology-to-atom-indices"]], "topology_to_components": [[48, "topology-to-components"]], "Equilibrium Calculations": [[49, "equilibrium-calculations"], [54, "equilibrium-calculations"]], "References": [[49, "references"], [50, "references"], [53, "references"], [54, "references"]], "Non-Equilibrium Calculations": [[50, "non-equilibrium-calculations"]], "ABsolute SOLVantion Free Energy Calculations": [[51, "absolute-solvantion-free-energy-calculations"]], "Installation": [[52, "installation"]], "Installing using conda": [[52, "installing-using-conda"]], "Installing from source": [[52, "installing-from-source"]], "Reproducibility": [[53, "reproducibility"]], "Regression Results": [[53, "regression-results"]], "Theory": [[54, "theory"]], "Note": [[54, null], [55, null], [55, null]], "Non-equilibrium Calculations": [[54, "non-equilibrium-calculations"]], "Alchemical Transformations": [[55, "alchemical-transformations"]], "Electrostatics": [[55, "electrostatics"]], "vdW": [[55, "vdw"]], "Lennard\u2013Jones": [[55, "lennard-jones"]], "Custom vdW Forms": [[55, "custom-vdw-forms"]]}, "indexentries": {"absolv": [[0, "module-absolv"]], "module": [[0, "module-absolv"], [1, "module-absolv.factories"], [2, "module-absolv.factories.alchemical"], [7, "module-absolv.factories.coordinate"], [9, "module-absolv.models"], [21, "module-absolv.runners"], [22, "module-absolv.runners.equilibrium"], [24, "module-absolv.runners.nonequilibrium"], [26, "module-absolv.simulations"], [35, "module-absolv.utilities"], [36, "module-absolv.utilities.openmm"], [46, "module-absolv.utilities.topology"]], "absolv.factories": [[1, "module-absolv.factories"]], "absolv.factories.alchemical": [[2, "module-absolv.factories.alchemical"]], "openmmalchemicalfactory (class in absolv.factories.alchemical)": [[3, "absolv.factories.alchemical.OpenMMAlchemicalFactory"]], "__init__() (absolv.factories.alchemical.openmmalchemicalfactory method)": [[3, "absolv.factories.alchemical.OpenMMAlchemicalFactory.__init__"]], "generate() (absolv.factories.alchemical.openmmalchemicalfactory class method)": [[3, "absolv.factories.alchemical.OpenMMAlchemicalFactory.generate"]], "lj_potential() (in module absolv.factories.alchemical)": [[4, "absolv.factories.alchemical.lj_potential"]], "lorentz_berthelot() (in module absolv.factories.alchemical)": [[5, "absolv.factories.alchemical.lorentz_berthelot"]], "soft_core_lj_potential() (in module absolv.factories.alchemical)": [[6, "absolv.factories.alchemical.soft_core_lj_potential"]], "absolv.factories.coordinate": [[7, "module-absolv.factories.coordinate"]], "packmolcoordinatefactory (class in absolv.factories.coordinate)": [[8, "absolv.factories.coordinate.PACKMOLCoordinateFactory"]], "__init__() (absolv.factories.coordinate.packmolcoordinatefactory method)": [[8, "absolv.factories.coordinate.PACKMOLCoordinateFactory.__init__"]], "generate() (absolv.factories.coordinate.packmolcoordinatefactory class method)": [[8, "absolv.factories.coordinate.PACKMOLCoordinateFactory.generate"]], "absolv.models": [[9, "module-absolv.models"]], "std_error (absolv.models.deltag attribute)": [[10, "absolv.models.DeltaG.std_error"]], "value (absolv.models.deltag attribute)": [[10, "absolv.models.DeltaG.value"]], "equilibration_protocol (absolv.models.equilibriumprotocol attribute)": [[11, "absolv.models.EquilibriumProtocol.equilibration_protocol"]], "lambda_electrostatics (absolv.models.equilibriumprotocol attribute)": [[11, "absolv.models.EquilibriumProtocol.lambda_electrostatics"]], "lambda_sterics (absolv.models.equilibriumprotocol attribute)": [[11, "absolv.models.EquilibriumProtocol.lambda_sterics"]], "minimization_protocol (absolv.models.equilibriumprotocol attribute)": [[11, "absolv.models.EquilibriumProtocol.minimization_protocol"]], "n_states (absolv.models.equilibriumprotocol property)": [[11, "absolv.models.EquilibriumProtocol.n_states"]], "production_protocol (absolv.models.equilibriumprotocol attribute)": [[11, "absolv.models.EquilibriumProtocol.production_protocol"]], "sampler (absolv.models.equilibriumprotocol attribute)": [[11, "absolv.models.EquilibriumProtocol.sampler"]], "type (absolv.models.equilibriumprotocol attribute)": [[11, "absolv.models.EquilibriumProtocol.type"]], "max_iterations (absolv.models.minimizationprotocol attribute)": [[12, "absolv.models.MinimizationProtocol.max_iterations"]], "tolerance (absolv.models.minimizationprotocol attribute)": [[12, "absolv.models.MinimizationProtocol.tolerance"]], "equilibration_protocol (absolv.models.nonequilibriumprotocol attribute)": [[13, "absolv.models.NonEquilibriumProtocol.equilibration_protocol"]], "minimization_protocol (absolv.models.nonequilibriumprotocol attribute)": [[13, "absolv.models.NonEquilibriumProtocol.minimization_protocol"]], "production_protocol (absolv.models.nonequilibriumprotocol attribute)": [[13, "absolv.models.NonEquilibriumProtocol.production_protocol"]], "switching_protocol (absolv.models.nonequilibriumprotocol attribute)": [[13, "absolv.models.NonEquilibriumProtocol.switching_protocol"]], "type (absolv.models.nonequilibriumprotocol attribute)": [[13, "absolv.models.NonEquilibriumProtocol.type"]], "n_iterations (absolv.models.simulationprotocol attribute)": [[14, "absolv.models.SimulationProtocol.n_iterations"]], "n_steps_per_iteration (absolv.models.simulationprotocol attribute)": [[14, "absolv.models.SimulationProtocol.n_steps_per_iteration"]], "thermostat_friction (absolv.models.simulationprotocol attribute)": [[14, "absolv.models.SimulationProtocol.thermostat_friction"]], "timestep (absolv.models.simulationprotocol attribute)": [[14, "absolv.models.SimulationProtocol.timestep"]], "pressure (absolv.models.state attribute)": [[15, "absolv.models.State.pressure"]], "temperature (absolv.models.state attribute)": [[15, "absolv.models.State.temperature"]], "n_electrostatic_steps (absolv.models.switchingprotocol attribute)": [[16, "absolv.models.SwitchingProtocol.n_electrostatic_steps"]], "n_steps_per_electrostatic_step (absolv.models.switchingprotocol attribute)": [[16, "absolv.models.SwitchingProtocol.n_steps_per_electrostatic_step"]], "n_steps_per_steric_step (absolv.models.switchingprotocol attribute)": [[16, "absolv.models.SwitchingProtocol.n_steps_per_steric_step"]], "n_steric_steps (absolv.models.switchingprotocol attribute)": [[16, "absolv.models.SwitchingProtocol.n_steric_steps"]], "thermostat_friction (absolv.models.switchingprotocol attribute)": [[16, "absolv.models.SwitchingProtocol.thermostat_friction"]], "timestep (absolv.models.switchingprotocol attribute)": [[16, "absolv.models.SwitchingProtocol.timestep"]], "n_solute_molecules (absolv.models.system property)": [[17, "absolv.models.System.n_solute_molecules"]], "n_solvent_molecules_a (absolv.models.system property)": [[17, "absolv.models.System.n_solvent_molecules_a"]], "n_solvent_molecules_b (absolv.models.system property)": [[17, "absolv.models.System.n_solvent_molecules_b"]], "solutes (absolv.models.system attribute)": [[17, "absolv.models.System.solutes"]], "solvent_a (absolv.models.system attribute)": [[17, "absolv.models.System.solvent_a"]], "solvent_b (absolv.models.system attribute)": [[17, "absolv.models.System.solvent_b"]], "to_components() (absolv.models.system method)": [[17, "absolv.models.System.to_components"]], "delta_g_from_a_to_b (absolv.models.transferfreeenergyresult property)": [[18, "absolv.models.TransferFreeEnergyResult.delta_g_from_a_to_b"]], "delta_g_from_a_to_b_with_units (absolv.models.transferfreeenergyresult property)": [[18, "absolv.models.TransferFreeEnergyResult.delta_g_from_a_to_b_with_units"]], "delta_g_from_b_to_a (absolv.models.transferfreeenergyresult property)": [[18, "absolv.models.TransferFreeEnergyResult.delta_g_from_b_to_a"]], "delta_g_from_b_to_a_with_units (absolv.models.transferfreeenergyresult property)": [[18, "absolv.models.TransferFreeEnergyResult.delta_g_from_b_to_a_with_units"]], "delta_g_solvent_a (absolv.models.transferfreeenergyresult attribute)": [[18, "absolv.models.TransferFreeEnergyResult.delta_g_solvent_a"]], "delta_g_solvent_b (absolv.models.transferfreeenergyresult attribute)": [[18, "absolv.models.TransferFreeEnergyResult.delta_g_solvent_b"]], "input_schema (absolv.models.transferfreeenergyresult attribute)": [[18, "absolv.models.TransferFreeEnergyResult.input_schema"]], "provenance (absolv.models.transferfreeenergyresult attribute)": [[18, "absolv.models.TransferFreeEnergyResult.provenance"]], "alchemical_protocol_a (absolv.models.transferfreeenergyschema attribute)": [[19, "absolv.models.TransferFreeEnergySchema.alchemical_protocol_a"]], "alchemical_protocol_b (absolv.models.transferfreeenergyschema attribute)": [[19, "absolv.models.TransferFreeEnergySchema.alchemical_protocol_b"]], "state (absolv.models.transferfreeenergyschema attribute)": [[19, "absolv.models.TransferFreeEnergySchema.state"]], "system (absolv.models.transferfreeenergyschema attribute)": [[19, "absolv.models.TransferFreeEnergySchema.system"]], "float_validator() (in module absolv.models)": [[20, "absolv.models.float_validator"]], "absolv.runners": [[21, "module-absolv.runners"]], "absolv.runners.equilibrium": [[22, "module-absolv.runners.equilibrium"]], "equilibriumrunner (class in absolv.runners.equilibrium)": [[23, "absolv.runners.equilibrium.EquilibriumRunner"]], "__init__() (absolv.runners.equilibrium.equilibriumrunner method)": [[23, "absolv.runners.equilibrium.EquilibriumRunner.__init__"]], "analyze() (absolv.runners.equilibrium.equilibriumrunner class method)": [[23, "absolv.runners.equilibrium.EquilibriumRunner.analyze"]], "run() (absolv.runners.equilibrium.equilibriumrunner class method)": [[23, "absolv.runners.equilibrium.EquilibriumRunner.run"]], "setup() (absolv.runners.equilibrium.equilibriumrunner class method)": [[23, "absolv.runners.equilibrium.EquilibriumRunner.setup"]], "absolv.runners.nonequilibrium": [[24, "module-absolv.runners.nonequilibrium"]], "nonequilibriumrunner (class in absolv.runners.nonequilibrium)": [[25, "absolv.runners.nonequilibrium.NonEquilibriumRunner"]], "__init__() (absolv.runners.nonequilibrium.nonequilibriumrunner method)": [[25, "absolv.runners.nonequilibrium.NonEquilibriumRunner.__init__"]], "analyze() (absolv.runners.nonequilibrium.nonequilibriumrunner class method)": [[25, "absolv.runners.nonequilibrium.NonEquilibriumRunner.analyze"]], "run() (absolv.runners.nonequilibrium.nonequilibriumrunner class method)": [[25, "absolv.runners.nonequilibrium.NonEquilibriumRunner.run"]], "setup() (absolv.runners.nonequilibrium.nonequilibriumrunner class method)": [[25, "absolv.runners.nonequilibrium.NonEquilibriumRunner.setup"]], "absolv.simulations": [[26, "module-absolv.simulations"]], "alchemicalopenmmsimulation (class in absolv.simulations)": [[27, "absolv.simulations.AlchemicalOpenMMSimulation"]], "__init__() (absolv.simulations.alchemicalopenmmsimulation method)": [[27, "absolv.simulations.AlchemicalOpenMMSimulation.__init__"]], "run() (absolv.simulations.alchemicalopenmmsimulation method)": [[27, "absolv.simulations.AlchemicalOpenMMSimulation.run"]], "current_state (absolv.simulations.alchemicalopenmmsimulation property)": [[28, "absolv.simulations.AlchemicalOpenMMSimulation.current_state"]], "equilibriumopenmmsimulation (class in absolv.simulations)": [[29, "absolv.simulations.EquilibriumOpenMMSimulation"]], "__init__() (absolv.simulations.equilibriumopenmmsimulation method)": [[29, "absolv.simulations.EquilibriumOpenMMSimulation.__init__"]], "run() (absolv.simulations.equilibriumopenmmsimulation method)": [[29, "absolv.simulations.EquilibriumOpenMMSimulation.run"]], "current_state (absolv.simulations.equilibriumopenmmsimulation property)": [[30, "absolv.simulations.EquilibriumOpenMMSimulation.current_state"]], "nonequilibriumopenmmsimulation (class in absolv.simulations)": [[31, "absolv.simulations.NonEquilibriumOpenMMSimulation"]], "__init__() (absolv.simulations.nonequilibriumopenmmsimulation method)": [[31, "absolv.simulations.NonEquilibriumOpenMMSimulation.__init__"]], "run() (absolv.simulations.nonequilibriumopenmmsimulation method)": [[31, "absolv.simulations.NonEquilibriumOpenMMSimulation.run"]], "current_state (absolv.simulations.nonequilibriumopenmmsimulation property)": [[32, "absolv.simulations.NonEquilibriumOpenMMSimulation.current_state"]], "repexalchemicalopenmmsimulation (class in absolv.simulations)": [[33, "absolv.simulations.RepexAlchemicalOpenMMSimulation"]], "__init__() (absolv.simulations.repexalchemicalopenmmsimulation method)": [[33, "absolv.simulations.RepexAlchemicalOpenMMSimulation.__init__"]], "run() (absolv.simulations.repexalchemicalopenmmsimulation method)": [[33, "absolv.simulations.RepexAlchemicalOpenMMSimulation.run"]], "type_checking (in module absolv.simulations)": [[34, "absolv.simulations.TYPE_CHECKING"]], "absolv.utilities": [[35, "module-absolv.utilities"]], "absolv.utilities.openmm": [[36, "module-absolv.utilities.openmm"]], "array_to_vectors() (in module absolv.utilities.openmm)": [[37, "absolv.utilities.openmm.array_to_vectors"]], "build_context() (in module absolv.utilities.openmm)": [[38, "absolv.utilities.openmm.build_context"]], "create_system_generator() (in module absolv.utilities.openmm)": [[39, "absolv.utilities.openmm.create_system_generator"]], "disable_long_range_corrections() (in module absolv.utilities.openmm)": [[40, "absolv.utilities.openmm.disable_long_range_corrections"]], "evaluate_energy() (in module absolv.utilities.openmm)": [[41, "absolv.utilities.openmm.evaluate_energy"]], "extract_coordinates() (in module absolv.utilities.openmm)": [[42, "absolv.utilities.openmm.extract_coordinates"]], "minimize() (in module absolv.utilities.openmm)": [[43, "absolv.utilities.openmm.minimize"]], "set_alchemical_lambdas() (in module absolv.utilities.openmm)": [[44, "absolv.utilities.openmm.set_alchemical_lambdas"]], "set_coordinates() (in module absolv.utilities.openmm)": [[45, "absolv.utilities.openmm.set_coordinates"]], "absolv.utilities.topology": [[46, "module-absolv.utilities.topology"]], "topology_to_atom_indices() (in module absolv.utilities.topology)": [[47, "absolv.utilities.topology.topology_to_atom_indices"]], "topology_to_components() (in module absolv.utilities.topology)": [[48, "absolv.utilities.topology.topology_to_components"]]}, "docurls": ["api/absolv.html", "api/absolv.factories.html", "api/absolv.factories.alchemical.html", "api/absolv.factories.alchemical.OpenMMAlchemicalFactory.html", "api/absolv.factories.alchemical.lj_potential.html", "api/absolv.factories.alchemical.lorentz_berthelot.html", "api/absolv.factories.alchemical.soft_core_lj_potential.html", "api/absolv.factories.coordinate.html", "api/absolv.factories.coordinate.PACKMOLCoordinateFactory.html", "api/absolv.models.html", "api/absolv.models.DeltaG.html", "api/absolv.models.EquilibriumProtocol.html", "api/absolv.models.MinimizationProtocol.html", "api/absolv.models.NonEquilibriumProtocol.html", "api/absolv.models.SimulationProtocol.html", "api/absolv.models.State.html", "api/absolv.models.SwitchingProtocol.html", "api/absolv.models.System.html", "api/absolv.models.TransferFreeEnergyResult.html", "api/absolv.models.TransferFreeEnergySchema.html", "api/absolv.models.float_validator.html", "api/absolv.runners.html", "api/absolv.runners.equilibrium.html", "api/absolv.runners.equilibrium.EquilibriumRunner.html", "api/absolv.runners.nonequilibrium.html", "api/absolv.runners.nonequilibrium.NonEquilibriumRunner.html", "api/absolv.simulations.html", "api/absolv.simulations.AlchemicalOpenMMSimulation.html", "api/absolv.simulations.AlchemicalOpenMMSimulation.current_state.html", "api/absolv.simulations.EquilibriumOpenMMSimulation.html", "api/absolv.simulations.EquilibriumOpenMMSimulation.current_state.html", "api/absolv.simulations.NonEquilibriumOpenMMSimulation.html", "api/absolv.simulations.NonEquilibriumOpenMMSimulation.current_state.html", "api/absolv.simulations.RepexAlchemicalOpenMMSimulation.html", "api/absolv.simulations.TYPE_CHECKING.html", "api/absolv.utilities.html", "api/absolv.utilities.openmm.html", "api/absolv.utilities.openmm.array_to_vectors.html", "api/absolv.utilities.openmm.build_context.html", "api/absolv.utilities.openmm.create_system_generator.html", "api/absolv.utilities.openmm.disable_long_range_corrections.html", "api/absolv.utilities.openmm.evaluate_energy.html", "api/absolv.utilities.openmm.extract_coordinates.html", "api/absolv.utilities.openmm.minimize.html", "api/absolv.utilities.openmm.set_alchemical_lambdas.html", "api/absolv.utilities.openmm.set_coordinates.html", "api/absolv.utilities.topology.html", "api/absolv.utilities.topology.topology_to_atom_indices.html", "api/absolv.utilities.topology.topology_to_components.html", "examples/equilibrium.html", "examples/non-equilibrium.html", "index.html", "installation.html", "user-guide/reproducibility.html", "user-guide/theory.html", "user-guide/transformations.html"]})